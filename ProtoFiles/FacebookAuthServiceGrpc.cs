// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: facebook_auth_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class FacebookAuthService
{
  static readonly string __ServiceName = "FacebookAuthService";

  static readonly grpc::Marshaller<global::FacebookLoginReq> __Marshaller_FacebookLoginReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FacebookLoginReq.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FacebookLoginResp> __Marshaller_FacebookLoginResp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FacebookLoginResp.Parser.ParseFrom);

  static readonly grpc::Method<global::FacebookLoginReq, global::FacebookLoginResp> __Method_FacebookLogin = new grpc::Method<global::FacebookLoginReq, global::FacebookLoginResp>(
      grpc::MethodType.Unary,
      __ServiceName,
      "FacebookLogin",
      __Marshaller_FacebookLoginReq,
      __Marshaller_FacebookLoginResp);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::FacebookAuthServiceReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of FacebookAuthService</summary>
  [grpc::BindServiceMethod(typeof(FacebookAuthService), "BindService")]
  public abstract partial class FacebookAuthServiceBase
  {
    public virtual global::System.Threading.Tasks.Task<global::FacebookLoginResp> FacebookLogin(global::FacebookLoginReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for FacebookAuthService</summary>
  public partial class FacebookAuthServiceClient : grpc::ClientBase<FacebookAuthServiceClient>
  {
    /// <summary>Creates a new client for FacebookAuthService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    public FacebookAuthServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for FacebookAuthService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    public FacebookAuthServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    protected FacebookAuthServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    protected FacebookAuthServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    public virtual global::FacebookLoginResp FacebookLogin(global::FacebookLoginReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FacebookLogin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::FacebookLoginResp FacebookLogin(global::FacebookLoginReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_FacebookLogin, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::FacebookLoginResp> FacebookLoginAsync(global::FacebookLoginReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return FacebookLoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::FacebookLoginResp> FacebookLoginAsync(global::FacebookLoginReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_FacebookLogin, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    protected override FacebookAuthServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new FacebookAuthServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static grpc::ServerServiceDefinition BindService(FacebookAuthServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_FacebookLogin, serviceImpl.FacebookLogin).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static void BindService(grpc::ServiceBinderBase serviceBinder, FacebookAuthServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_FacebookLogin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FacebookLoginReq, global::FacebookLoginResp>(serviceImpl.FacebookLogin));
  }

}
#endregion
